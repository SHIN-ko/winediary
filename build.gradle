plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.winediary'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.4'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	compileOnly 'org.projectlombok:lombok:1.18.24'
	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.4'
	testImplementation 'org.springframework.security:spring-security-test:5.7.3'
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
			excludes = [
			        'com.winediary.winediary.WinediaryApplication',
					'com.winediary.winediary.config.*',
					'com.winediary.winediary.domain.*'
			]
		}
	}
}

test {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
